Testing Linux under emulator

1. build
  1.1 goal: linux setup that runs under qemu
  1.2 known: mini-rv32ima works: risc-v toolchain, buildroot, image runs under qemu
    * fresh build doesn't quite work either, fs not quite right?
  1.3 tries
    1.3.1 modify mini-rv32ima buildroot config to 64bit
      1.3.1.1 it complains about -msoft-float option not recognized when building uclibc
    1.3.2 fresh buildroot build from source
    steps:
      * wsl ubuntu 22.04.3LTS
      * install required pkgs for tool chain
      * git clone https://github.com/riscv/riscv-gnu-toolchain
      * mkdir /opt/riscv; chmod a+w /opt/riscv
      * ./configure --prefix=/opt/riscv --enable-multilib
      * make linux
      * git clone git://git.buildroot.net/buildroot
      * git checkout 2023.11
      * make qemu_riscv64_virt_defconfig
      * make menuconfig (remove RISC-V F extension; uclibc;kernel config file; remove network interface;initramfs only; remove host-qemu); remove python, 
      * make linux-menuconfig (sysV IPC, remove all SoCs) 
      * make
      * cd output/images ; ./start-qemu.sh
    config files:
      * buildroot
      * kernel
      * busybox
      * uclibc
    status
      * it runs fine now, but it use OpenSBI, glibc, ext2 fs etc.
      * doesn't run without OpenSBI, just hang w/ -bios none -kernel Image
      * try with initramfs, works now, although qemu was still built
      * kernel is built with C instructions; can not change it through menuconfig; manual editing of config file doesn't seem to work either
    issues
      * lots of issues with buildroot
      * add OpenSBI option after no selection at first doesn't produce the firmware files
      * can buildroot run without toolchain since it has its own
2. Testing
  * load address for OpenSBI and Image:
    * qemu: OpenSBI: 0x20000000 (64M, virt machine), kernel: after OpenSBI (2MB aligned, should be 0x20200000); dtb
    * fw_dynamic_info structure is used to pass the kernel address, OpenSBI uses this structure to start the kernel, where should this be located?
    * linux builds with compressed instructions although buildroots option has no C, and it can not be turned off in the kernel config
3. Other info
  * u-root: very simple boot system, sufficient to run together with a kernel?
  * kernel expects to be in S-mode, so SBI or equivalent unavoidable?
  * https://github.com/franzflasch/riscv_em: 32-bit MMU and 64-bit noMMU emulator, can run Linux, had patches for buildroot/linux/opensbi
    * the shell script uses buildroot to build a file system rootfs.cpio which is specified during linux build to incorporate into the kernel image
    * set ARCH and CROSS_COMPILER before running "make menuconfig" for the kernel, we're getting closer
    * but still version difference and lots of config differences to sort out
    * need to try separate buildroot build as well
    * the 32-bit version uses openSBI
    * buildroot: about 500 lines of real config options
    * emulator addresses: reset vector at 0x1000, dtb at end of physical memory with alingment, kernel itself at start of physical memory
      * the kernel start address and dtb addresses are passed as part of the reset vector
    * it seems that I should be able to make some minor modifications to my emulator and be able to run with these two files
4. Test
  * reset vector not necessary, load dtb aligned at 2MB
  * it uses M instructions, added some of them back
  * uses simple UART at 0x300000, temporarily changed address, should be able to use dtb to adjust
  * it prints a few messages and tries to access memory beyond the 128M end (0x8000000) when building zone list?


    
